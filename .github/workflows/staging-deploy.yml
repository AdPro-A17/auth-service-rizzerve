name: Deploy to Staging

on:
  workflow_dispatch: # Manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          ssh ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }} << EOF
            # Step 1: Refresh DuckDNS IP
            curl -k "https://www.duckdns.org/update?domains=${DUCKDNS_DOMAIN}&token=${DUCKDNS_TOKEN}&ip="
          
            # Step 2: Deploy latest staging code
            cd ~/auth-service-rizzerve
            git pull origin staging
            ./gradlew bootJar
            docker stop auth-service || true
            docker rm auth-service || true
            docker build -t auth-service-rizzerve:latest .
            docker run -d --name auth-service \
              -p 8080:8080 \
              -e DB_HOST='${DB_HOST}' \
              -e DB_NAME='${DB_NAME}' \
              -e DB_USER='${DB_USER}' \
              -e DB_PASSWORD='${DB_PASSWORD}' \
              auth-service-rizzerve:latest
          EOF